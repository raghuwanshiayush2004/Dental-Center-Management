{"ast":null,"code":"// Initialize mock data if not exists\nconst initializeData = () => {\n  if (!localStorage.getItem('users')) {\n    localStorage.setItem('users', JSON.stringify([{\n      id: \"1\",\n      role: \"Admin\",\n      email: \"admin@entnt.in\",\n      password: \"admin123\"\n    }, {\n      id: \"2\",\n      role: \"Patient\",\n      email: \"john@entnt.in\",\n      password: \"patient123\",\n      patientId: \"p1\"\n    }]));\n  }\n  if (!localStorage.getItem('patients')) {\n    localStorage.setItem('patients', JSON.stringify([{\n      id: \"p1\",\n      name: \"John Doe\",\n      dob: \"1990-05-10\",\n      contact: \"1234567890\",\n      healthInfo: \"No allergies\"\n    }]));\n  }\n  if (!localStorage.getItem('appointments')) {\n    localStorage.setItem('appointments', JSON.stringify([{\n      id: \"11\",\n      patientId: \"p1\",\n      title: \"Toothache\",\n      description: \"Upper molar pain\",\n      comments: \"Sensitive to cold\",\n      appointmentDate: \"2025-07-01T10:00:00\",\n      cost: 80,\n      status: \"Completed\",\n      treatment: \"Filling\",\n      nextDate: \"2025-07-15T10:00:00\"\n    }]));\n  }\n  if (!localStorage.getItem('files')) {\n    localStorage.setItem('files', JSON.stringify([{\n      id: \"f1\",\n      appointmentId: \"11\",\n      name: \"invoice.pdf\",\n      url: \"base64string-or-blob-url\"\n    }, {\n      id: \"f2\",\n      appointmentId: \"11\",\n      name: \"xray.png\",\n      url: \"base64string-or-blob-url\"\n    }]));\n  }\n};\ninitializeData();\n\n// User functions\nexport const getUsers = () => JSON.parse(localStorage.getItem('users')) || [];\nexport const getCurrentUser = () => JSON.parse(localStorage.getItem('currentUser'));\nexport const setCurrentUser = user => localStorage.setItem('currentUser', JSON.stringify(user));\n\n// Patient functions\nexport const getPatients = () => JSON.parse(localStorage.getItem('patients')) || [];\nexport const savePatients = patients => localStorage.setItem('patients', JSON.stringify(patients));\n\n// Appointment functions\nexport const getAppointments = () => JSON.parse(localStorage.getItem('appointments')) || [];\nexport const saveAppointments = appointments => localStorage.setItem('appointments', JSON.stringify(appointments));\n\n// File functions\nexport const getFiles = () => JSON.parse(localStorage.getItem('files')) || [];\nexport const saveFiles = files => localStorage.setItem('files', JSON.stringify(files));","map":{"version":3,"names":["initializeData","localStorage","getItem","setItem","JSON","stringify","id","role","email","password","patientId","name","dob","contact","healthInfo","title","description","comments","appointmentDate","cost","status","treatment","nextDate","appointmentId","url","getUsers","parse","getCurrentUser","setCurrentUser","user","getPatients","savePatients","patients","getAppointments","saveAppointments","appointments","getFiles","saveFiles","files"],"sources":["C:/Users/Dell/OneDrive/Desktop/Dental Center Management/src/utils/storage.js"],"sourcesContent":["// Initialize mock data if not exists\r\nconst initializeData = () => {\r\n  if (!localStorage.getItem('users')) {\r\n    localStorage.setItem('users', JSON.stringify([\r\n      { id: \"1\", role: \"Admin\", email: \"admin@entnt.in\", password: \"admin123\" },\r\n      { id: \"2\", role: \"Patient\", email: \"john@entnt.in\", password: \"patient123\", patientId: \"p1\" }\r\n    ]));\r\n  }\r\n\r\n  if (!localStorage.getItem('patients')) {\r\n    localStorage.setItem('patients', JSON.stringify([\r\n      {\r\n        id: \"p1\",\r\n        name: \"John Doe\",\r\n        dob: \"1990-05-10\",\r\n        contact: \"1234567890\",\r\n        healthInfo: \"No allergies\"\r\n      }\r\n    ]));\r\n  }\r\n\r\n  if (!localStorage.getItem('appointments')) {\r\n    localStorage.setItem('appointments', JSON.stringify([\r\n      {\r\n        id: \"11\",\r\n        patientId: \"p1\",\r\n        title: \"Toothache\",\r\n        description: \"Upper molar pain\",\r\n        comments: \"Sensitive to cold\",\r\n        appointmentDate: \"2025-07-01T10:00:00\",\r\n        cost: 80,\r\n        status: \"Completed\",\r\n        treatment: \"Filling\",\r\n        nextDate: \"2025-07-15T10:00:00\"\r\n      }\r\n    ]));\r\n  }\r\n\r\n  if (!localStorage.getItem('files')) {\r\n    localStorage.setItem('files', JSON.stringify([\r\n      { id: \"f1\", appointmentId: \"11\", name: \"invoice.pdf\", url: \"base64string-or-blob-url\" },\r\n      { id: \"f2\", appointmentId: \"11\", name: \"xray.png\", url: \"base64string-or-blob-url\" }\r\n    ]));\r\n  }\r\n};\r\n\r\ninitializeData();\r\n\r\n// User functions\r\nexport const getUsers = () => JSON.parse(localStorage.getItem('users')) || [];\r\nexport const getCurrentUser = () => JSON.parse(localStorage.getItem('currentUser'));\r\nexport const setCurrentUser = (user) => localStorage.setItem('currentUser', JSON.stringify(user));\r\n\r\n// Patient functions\r\nexport const getPatients = () => JSON.parse(localStorage.getItem('patients')) || [];\r\nexport const savePatients = (patients) => localStorage.setItem('patients', JSON.stringify(patients));\r\n\r\n// Appointment functions\r\nexport const getAppointments = () => JSON.parse(localStorage.getItem('appointments')) || [];\r\nexport const saveAppointments = (appointments) => localStorage.setItem('appointments', JSON.stringify(appointments));\r\n\r\n// File functions\r\nexport const getFiles = () => JSON.parse(localStorage.getItem('files')) || [];\r\nexport const saveFiles = (files) => localStorage.setItem('files', JSON.stringify(files));"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}